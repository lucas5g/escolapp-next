generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Unity {
  id            Int    @id @default(autoincrement())
  name          String
  spreedsheetId String

  places     Place[]
  modalities Modality[]
  users      User[]
  teams      Team[]
  games      Game[]
  setups     Setup[]

  @@map("unities")
}

model Place {
  id      Int    @id @default(autoincrement())
  name    String
  unityId Int?

  unity Unity? @relation(fields: [unityId], references: [id])
  games Game[]

  @@map("places")
}

enum Type {
  collective
  individual
  participative
  ranking
}

model Modality {
  id              Int    @id @default(autoincrement())
  name            String
  type            Type
  membersQuantity Int
  teamsQuantity   Int
  unityId         Int?

  unity Unity? @relation(fields: [unityId], references: [id])
  games Game[]
  teams Team[]

  @@map("modalities")
}

enum Profile {
  admin
  coordinator
  judge
  manager
  representative
  teacher
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  profile  Profile

  unity   Unity? @relation(fields: [unityId], references: [id])
  unityId Int?

  games Game[]

  @@map("users")
}

enum Genre {
  misto
  mas
  fem
}

model Team {
  id         Int    @id @default(autoincrement())
  name       String
  group      String
  genre      Genre
  modalityId Int?
  unityId    Int?
  students   Json

  modality Modality? @relation(fields: [modalityId], references: [id])
  unity    Unity?    @relation(fields: [unityId], references: [id])

  @@map("teams")
}

model Game {
  id         Int      @id @default(autoincrement())
  date       DateTime
  startHours String
  endHours   String
  comments   String?
  teams      Json
  placeId    Int?
  modalityId Int?
  userId     Int?
  unityId    Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Place    Place?    @relation(fields: [placeId], references: [id])
  Modality Modality? @relation(fields: [modalityId], references: [id])
  User     User?     @relation(fields: [userId], references: [id])
  Unity    Unity?    @relation(fields: [unityId], references: [id])

  @@map("games")
}

model Setup {
  id           Int    @id @default(autoincrement())
  documentLink String

  unity   Unity? @relation(fields: [unityId], references: [id])
  unityId Int?

  @@map("setups")
}
